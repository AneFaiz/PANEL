<%- include('../components/template') %>
<main id="content">
   <div class="bg-transparent">
      <div class="sm:flex sm:items-center px-8 pt-4">
         <div class="sm:flex-auto">
           <h1 class="text-base font-medium leading-6 text-white"><%= req.translations.images %></h1>
           <p class="mt-1 tracking-tight text-sm text-neutral-500"><%= req.translations.imagesText %></p>
         </div>
         <div class="mt-4 sm:ml-8 sm:mt-0 sm:flex-none">
          <button id="uploadimage" type="button" class="block rounded-xl <%= theme['button-color'] %> px-3 py-2 text-center text-sm font-medium shadow-lg transition focus:outline focus:outline-2 focus:outline-offset-2">
            <%= req.translations.importImage %>
          </button>
        </div>
       </div>
      <div style="display: block;" id="nodeTable" class="mt-6 w-full">
      <table class="mt-6 w-full whitespace-nowrap text-left">
        <colgroup>
          <col class="w-full sm:w-4/12">
          <col class="lg:w-4/12">
          <col class="lg:w-2/12">
          <col class="lg:w-1/12">
        </colgroup>
        <thead class="border-b border-white/5 text-sm leading-6 text-white">
          <tr>
            <th scope="col" class="py-2 pl-4 pr-8 font-medium sm:pl-6 lg:pl-8"><%= req.translations.name %></th>
            <th scope="col" class="py-2 pl-0 pr-8 font-medium sm:table-cell"><%= req.translations.author %></th>
            <th scope="col" class="py-2 pl-0 pr-8 font-medium sm:table-cell"><%= req.translations.dockerImage %></th>
            <th scope="col" class="py-2 pl-0 pr-8 font-medium sm:table-cell"><%= req.translations.actions %></th>
          </tr>
        </thead>
        <tbody class="divide-y divide-white/5">
         <% eggs.forEach(function(egg) { %>
          <tr class="egg-row" data-egg='<%= JSON.stringify(egg) %>'>
            <td class="py-4 pl-4 pr-8 sm:pl-6 lg:pl-8 cursor-pointer">
              <div class="flex items-center gap-x-4">
                <div class="truncate text-sm font-medium leading-6 text-white"><%= egg.name || egg.Name %></div>
              </div>
            </td>
            <td class="py-4 pl-0 pr-4 sm:table-cell sm:pr-8">
              <div class="flex gap-x-3">
                <div class="font-mono text-sm leading-6 text-neutral-400">
                  <%= egg.author || egg.Author || 'Unknown' %>
                </div>
              </div>
            </td>
            <td class="py-4 pl-0 pr-4 sm:table-cell sm:pr-8">
              <div class="font-mono text-sm leading-6 text-neutral-400">
                <% if (egg.DockerImages && Object.keys(egg.DockerImages).length > 0) { %>
                  <%= Object.values(egg.DockerImages)[0].split(':')[0] %>
                <% } else if (egg.docker_images && Object.keys(egg.docker_images).length > 0) { %>
                  <%= Object.values(egg.docker_images)[0].split(':')[0] %>
                <% } else { %>
                  <%= egg.docker_image || 'No image specified' %>
                <% } %>
              </div>
            </td>
            <td class="py-4 pl-0 pr-4 sm:table-cell sm:pr-8">
              <button onclick="deleteEgg('<%= egg.Id %>')" class="rounded-lg bg-red-600 px-2 py-1 text-sm font-semibold text-white shadow-sm hover:bg-red-500">
                Delete
              </button>
            </td>
          </tr>
         <% }); %>
        </tbody>
      </table>
      </div>
   </div>
</main>

<!-- Upload Egg Modal -->
<div id="uploadEggModal" class="relative z-10 hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
  <div class="fixed inset-0 z-10 overflow-y-auto">
    <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
      <div class="relative transform overflow-hidden rounded-lg bg-gray-800 px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
        <div>
          <h3 class="text-lg font-medium leading-6 text-white" id="modal-title">Import Pterodactyl Egg</h3>
          <div class="mt-4">
            <textarea id="eggJson" rows="10" class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6" placeholder="Paste Pterodactyl egg JSON here..."></textarea>
          </div>
          <div class="mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3">
            <button type="button" onclick="uploadEgg()" class="inline-flex w-full justify-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 sm:col-start-2">Import</button>
            <button type="button" onclick="closeUploadModal()" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:col-start-1 sm:mt-0">Cancel</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include('../components/footer') %>

<script>
document.addEventListener("DOMContentLoaded", function(event) {
  const uploadBtn = document.getElementById('uploadimage');
  const uploadModal = document.getElementById('uploadEggModal');
  
  uploadBtn.addEventListener('click', function() {
    uploadModal.classList.remove('hidden');
  });
  
  window.closeUploadModal = function() {
    uploadModal.classList.add('hidden');
    document.getElementById('eggJson').value = '';
  };
  
  window.uploadEgg = async function() {
    const eggJson = document.getElementById('eggJson').value;
    
    try {
      const eggData = JSON.parse(eggJson);
      
      const response = await fetch('/admin/images/upload', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(eggData)
      });
      
      if (response.ok) {
        const result = await response.json();
        window.location.reload();
      } else {
        const error = await response.json();
        alert(error.error || 'Failed to upload egg');
      }
    } catch (err) {
      alert('Invalid JSON format: ' + err.message);
    }
  };
  
  window.deleteEgg = async function(id) {
    if (!confirm('Are you sure you want to delete this egg?')) return;
    
    try {
      const response = await fetch('/admin/images/delete', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ id })
      });
      
      if (response.ok) {
        window.location.reload();
      } else {
        const error = await response.json();
        alert(error.error || 'Failed to delete egg');
      }
    } catch (err) {
      alert('Error deleting egg: ' + err.message);
    }
  };
});
</script>